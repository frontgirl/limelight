/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden],
template {
  display: none; }

a {
  background-color: transparent; }

a:active {
  outline: 0; }

a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b,
strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

mark {
  background: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 1em 40px; }

hr {
  box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

button {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled],
html input[disabled] {
  cursor: default; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box; }

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: bold; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/* -------------------------------------------------------------
  Sass CSS3 Mixins! The Cross-Browser CSS3 Sass Library
  By: Matthieu Aussaguel, http://www.mynameismatthieu.com, @matthieu_tweets
  List of CSS3 Sass Mixins File to be @imported and @included as you need
  The purpose of this library is to facilitate the use of CSS3 on different browsers avoiding HARD TO READ and NEVER
  ENDING css files
  note: All CSS3 Properties are being supported by Safari 5
  more info: http://www.findmebyip.com/litmus/#css3-properties
------------------------------------------------------------- */
@font-face {
  font-family: 'Proxima Nova';
  src: url("../fonts/ProximaNova/ProximaNova-Semibold.eot");
  src: url("../fonts/ProximaNova/ProximaNova-Semibold.eot?#iefix") format("embedded-opentype"), url("../fonts/ProximaNova/ProximaNova-Semibold.woff") format("woff"), url("../fonts/ProximaNova/ProximaNova-Semibold.ttf") format("truetype"), url("../fonts/ProximaNova/ProximaNova-Semibold.svg#ProximaNova-Semibold") format("svg");
  font-weight: 600;
  font-style: normal; }

@font-face {
  font-family: 'Proxima Nova';
  src: url("../fonts/ProximaNova/ProximaNova-Light.eot");
  src: url("../fonts/ProximaNova/ProximaNova-Light.eot?#iefix") format("embedded-opentype"), url("../fonts/ProximaNova/ProximaNova-Light.woff") format("woff"), url("../fonts/ProximaNova/ProximaNova-Light.ttf") format("truetype"), url("../fonts/ProximaNova/ProximaNova-Light.svg#ProximaNova-Light") format("svg");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: 'Nexa Slab';
  src: url("../fonts/NexaSlab/NexaSlab-xBold.eot");
  src: url("../fonts/NexaSlab/NexaSlab-xBold.eot?#iefix") format("embedded-opentype"), url("../fonts/NexaSlab/NexaSlab-xBold.woff") format("woff"), url("../fonts/NexaSlab/NexaSlab-xBold.ttf") format("truetype"), url("../fonts/NexaSlab/NexaSlab-xBold.svg#NexaSlab-xBold") format("svg");
  font-weight: 800;
  font-style: normal; }

html, body {
  color: #111111;
  font-family: "Proxima Nova", Arial, sans-serif;
  font-size: 14px; }

.container {
  max-width: 940px;
  margin: 0 auto; }
  .container:after {
    content: "";
    display: table;
    clear: both; }

/* sprites */
.svg-comment, .svg-download, .svg-eye, .svg-facebook, .svg-googleplus, .svg-home, .svg-pinterest, .svg-twitter {
  background: url("svg/sprite.view.svg") no-repeat; }

.svg-comment {
  background-position: 0 100%; }

.svg-comment-dims {
  width: 80px;
  height: 70px; }

.svg-download {
  background-position: 0 0; }

.svg-download-dims {
  width: 100px;
  height: 85px; }

.svg-eye {
  background-position: 41.666666666666664% 0; }

.svg-eye-dims {
  width: 100px;
  height: 56px; }

.svg-facebook {
  background-position: 68.96551724137932% 0; }

.svg-facebook-dims {
  width: 50px;
  height: 90px; }

.svg-googleplus {
  background-position: 99.84025559105432% 48.203592814371255%; }

.svg-googleplus-dims {
  width: 89.6px;
  height: 88px; }

.svg-home {
  background-position: 100% 0; }

.svg-home-dims {
  width: 90px;
  height: 80.5px; }

.svg-pinterest {
  background-position: 0 54.83870967741935%; }

.svg-pinterest-dims {
  width: 77.8px;
  height: 100px; }

.svg-twitter {
  background-position: 31.370967741935484% 47.16981132075472%; }

.svg-twitter-dims {
  width: 92px;
  height: 74.8px; }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
/* all blocks */
.header__logo {
  display: block;
  float: left;
  margin: 35px 0;
  background: url(./sprites/sprite.png);
  background-position: 0px 0px;
  width: 170px;
  height: 34px; }
